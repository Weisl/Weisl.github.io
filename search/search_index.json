{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Me Hello, my name is Matthias. I am currently a 3D Environment Artist at Remedy Entertainment. I worked for King Art Games, Innerspace, and as a Freelancer before. I have always been interested in pipelines and coding. I have been writing small scripts and addons all my professional life and even before. Working on these tools in my spare time is a welcome change to my everyday job. A lot of these tools are born from personal needs and try to solve real-world issues. These are issues I face both at work and in personal projects. I am now trying to polish some of those tools and make them available for you! It is a lot of work though. Generalize them to work in more generic cases, fixing all the bugs, create a consistent UX/UI, and handling all the bugs is a lot of additional work. Please consider supporting me, by buying them on any of the available stores and add a rating. Artstation Portfolio Stores Blender Market Artstation Marketplace Gumroad","title":"Home"},{"location":"#about-me","text":"Hello, my name is Matthias. I am currently a 3D Environment Artist at Remedy Entertainment. I worked for King Art Games, Innerspace, and as a Freelancer before. I have always been interested in pipelines and coding. I have been writing small scripts and addons all my professional life and even before. Working on these tools in my spare time is a welcome change to my everyday job. A lot of these tools are born from personal needs and try to solve real-world issues. These are issues I face both at work and in personal projects. I am now trying to polish some of those tools and make them available for you! It is a lot of work though. Generalize them to work in more generic cases, fixing all the bugs, create a consistent UX/UI, and handling all the bugs is a lot of additional work. Please consider supporting me, by buying them on any of the available stores and add a rating. Artstation Portfolio","title":"About Me"},{"location":"#stores","text":"Blender Market Artstation Marketplace Gumroad","title":"Stores"},{"location":"cam_Overview/","text":"Overview What is Cam-Manager? Cam-Manager is an addon to organize scene cameras and tweak their settings directly from the 3D view. The mission of this addon is to bring all camera-related relevant settings and information as close to the user as possible. Camera handling should become as simple and fast as using a smartphone camera. Feature Overview View all cameras and common camera settings at a glance : Compare different camera settings when doing your adjustments or when renaming your cameras. Toggle Cameras with hotkeys (default: Ctrl + Shift + Arrow Left/Right) and from the different addon overview panels. Slick and efficient UI Camera Resolution : Assign different resolutions to each camera Lock/Unlock Camera: Lock/Unlock all camera transformations instantly from both the overview panel or pie menu Render Slots: Assign different render slots to different cameras to avoid overwriting other camera renders. Camera Collection: Create or specify an existing camera collection to easily assign individual or all cameras to it. Keep them organized in the Outliner and quickly hide/show all of them. Background Image Settings: Toggle the background image on/off, adjust opacity or change the render order directly from the 3D view (Pie menu). Resolution from Background Image: Set the camera resolution from the camera background image . World Material: Assign different world materials per Camera . Exposure: Compensate lighting intensity changes from cameras by assigning a camera-specific exposure value. Change hotkeys to your likings from the addon preferences. The UI Dolly-Zoom Scene Composition Image Planes Rendering Why Cam-Manager? Stay Organized: See all the cameras and their most important values at one glance and adjust the values if needed. Quick: All the functionality is at your fingertips and can be accessed from the 3D View. No need to scroll through different windows and panels. Find all the relevant information at one spot. No need to scan through different menus and windows. Easy to use: The overview panel is a simple and well-structured spreadsheet and the operators are self-explanatory, with additional descriptions, if needed. Continuous Support: The addon is well documented. All buttons, tools, and values have useful description texts when hovering. Development is still ongoing. Share your feedback, opinions, use-cases, needs and help me to improve the tool even further. Behind the curtain Blender stores the current resolution, exposure, and world material as global value in the scene and not as components of the camera. When switching the camera, the addon will set the current scene values to those stored per camera by the addon. This works perfectly when switching cameras with the tools provided by this addon. It will not work when changing the camera manually or when using other addons. This is unfortunately a limitation coming from blender implementation of cameras. Due to this limitation in the blender architecture, it is not possible to preview multiple cameras with different resolutions at the same time. Download and Installation Please purchase the Cam-Manager from any of the provided stores. The addon can be installed by going to File > User Preferences > addons . Click at Install from File and specify the downloaded zip file in the newly opened window. Cam-Manager should now appear in your addons window and can be activated. Please contact me in case you run into any issues here. Once installed, you can use the auto-updater in the user preferences to get the latest version of the addon. Stores: Blender Market Artstation Marketplace Gumroad","title":"Overview"},{"location":"cam_Overview/#overview","text":"","title":"Overview"},{"location":"cam_Overview/#what-is-cam-manager","text":"Cam-Manager is an addon to organize scene cameras and tweak their settings directly from the 3D view. The mission of this addon is to bring all camera-related relevant settings and information as close to the user as possible. Camera handling should become as simple and fast as using a smartphone camera.","title":"What is Cam-Manager?"},{"location":"cam_Overview/#feature-overview","text":"View all cameras and common camera settings at a glance : Compare different camera settings when doing your adjustments or when renaming your cameras. Toggle Cameras with hotkeys (default: Ctrl + Shift + Arrow Left/Right) and from the different addon overview panels. Slick and efficient UI Camera Resolution : Assign different resolutions to each camera Lock/Unlock Camera: Lock/Unlock all camera transformations instantly from both the overview panel or pie menu Render Slots: Assign different render slots to different cameras to avoid overwriting other camera renders. Camera Collection: Create or specify an existing camera collection to easily assign individual or all cameras to it. Keep them organized in the Outliner and quickly hide/show all of them. Background Image Settings: Toggle the background image on/off, adjust opacity or change the render order directly from the 3D view (Pie menu). Resolution from Background Image: Set the camera resolution from the camera background image . World Material: Assign different world materials per Camera . Exposure: Compensate lighting intensity changes from cameras by assigning a camera-specific exposure value. Change hotkeys to your likings from the addon preferences. The UI Dolly-Zoom Scene Composition Image Planes Rendering","title":"Feature Overview"},{"location":"cam_Overview/#why-cam-manager","text":"Stay Organized: See all the cameras and their most important values at one glance and adjust the values if needed. Quick: All the functionality is at your fingertips and can be accessed from the 3D View. No need to scroll through different windows and panels. Find all the relevant information at one spot. No need to scan through different menus and windows. Easy to use: The overview panel is a simple and well-structured spreadsheet and the operators are self-explanatory, with additional descriptions, if needed. Continuous Support: The addon is well documented. All buttons, tools, and values have useful description texts when hovering. Development is still ongoing. Share your feedback, opinions, use-cases, needs and help me to improve the tool even further.","title":"Why Cam-Manager?"},{"location":"cam_Overview/#behind-the-curtain","text":"Blender stores the current resolution, exposure, and world material as global value in the scene and not as components of the camera. When switching the camera, the addon will set the current scene values to those stored per camera by the addon. This works perfectly when switching cameras with the tools provided by this addon. It will not work when changing the camera manually or when using other addons. This is unfortunately a limitation coming from blender implementation of cameras. Due to this limitation in the blender architecture, it is not possible to preview multiple cameras with different resolutions at the same time.","title":"Behind the curtain"},{"location":"cam_Overview/#download-and-installation","text":"Please purchase the Cam-Manager from any of the provided stores. The addon can be installed by going to File > User Preferences > addons . Click at Install from File and specify the downloaded zip file in the newly opened window. Cam-Manager should now appear in your addons window and can be activated. Please contact me in case you run into any issues here. Once installed, you can use the auto-updater in the user preferences to get the latest version of the addon.","title":"Download and Installation"},{"location":"cam_Overview/#stores","text":"Blender Market Artstation Marketplace Gumroad","title":"Stores:"},{"location":"cam_Rendering_workflow/","text":"Presentation Customize the overall lighting conditions by assigning individual world materials (HDRIs) to each camera. Further, you can adjust the exposure for each camera, compensating for darker camera angles or world materials. Assign different world materials (HDRIs) to individual cameras. The background will automatically be swapped accordingly when switching cameras. This allows you to easily iterate different lighting conditions and evaluate materials. This system is limited to world material and exposure. This means it's not suitable for more complex lighting changes that require different scene lights to be changed. Render Slots Don't overwrite your previous render from a different camera by accident. Assign different render slots per camera. Changing the camera will also change to the proper render sloth in the render viewer. Assign different render slots easily to different cameras. Save render slot per camera and render directly from the Cam-Manager window. Save Renderings Use the camera names to save the images direclty to the specified directory.","title":"Presentation"},{"location":"cam_Rendering_workflow/#presentation","text":"Customize the overall lighting conditions by assigning individual world materials (HDRIs) to each camera. Further, you can adjust the exposure for each camera, compensating for darker camera angles or world materials. Assign different world materials (HDRIs) to individual cameras. The background will automatically be swapped accordingly when switching cameras. This allows you to easily iterate different lighting conditions and evaluate materials. This system is limited to world material and exposure. This means it's not suitable for more complex lighting changes that require different scene lights to be changed.","title":"Presentation"},{"location":"cam_Rendering_workflow/#render-slots","text":"Don't overwrite your previous render from a different camera by accident. Assign different render slots per camera. Changing the camera will also change to the proper render sloth in the render viewer. Assign different render slots easily to different cameras. Save render slot per camera and render directly from the Cam-Manager window.","title":"Render Slots"},{"location":"cam_Rendering_workflow/#save-renderings","text":"Use the camera names to save the images direclty to the specified directory.","title":"Save Renderings"},{"location":"cam_UI/","text":"The UI Overview Panel (Shift + C) The Overview Panel is the core of the addon. The menu lists all cameras in your scene. It provides a quick overview of the most important settings and an easy way to adjusting them. Additionally, you can assign camera-specific resolution, render slots, and world materials, exceeding the posibilities of the default Blender. The Overview panel contains all cameras and most relevant camera settings in your scene. Toggle the active camera Rename cameras Toggle visibility, selection, and locking of cameras Adjust specific settings like focal length and clipping planes per camera Change output resolution per camera Copy camera resolution from the assigned background image Set the world material (HDRI) per camera to adjust the lighting Set exposure value per camera Move camera to the specified camera collection Assing individual render slots per camera Render any camera directly from this menu Set and assign to Camera Collection Settings: Automatically save renders, use camera name for the file name and set the output folder Scene Properties The Scene Properties panel contains an addional, compacter version of the camera overview panel. It allows you to rename cameras, change their visibility and locking states and assign them to the specified camera collection quickly. Camera Pie (Alt + C) This pie menu is intended to tweak the currently active camera. It is split into 4 areas. Background Image and Render Settings: Assign a render slot and render directly from the pie menu. Further, this area contains functionalities to adjust the visibility of background images and toggle them on/off quickly. Camera Settings: Tweak camera-specific values like focal length, exposure, clipping planes, and depth of field. NEW: Dolly Zoom and Toggle to Camera view Viewport Settings: Quickly show and hide composition guides, UI elements and darken the area outside the final frame. Quick Access Tools: Quickly toggle between cameras, lock/unlock, select or lock the current camera to view. Toggle Cameras (Ctrl + Shift + Left/Right Arrow) Ctrl + Shift + Left/Right Arrow allows you to quickly toggle between the scene cameras. All camera-specific settings like resolution and world material will automatically be applied. The hotkeys can be changed in the addon preferences. Warning All camera-specific settings - provided by this addon - like world material, exposure, camera resolution and render slot will not be updated when changing the active camera in the scene properties manually. Use the hotkeys and buttons provided by the addon to switch the cameras. Camera toggle using hotkeys: The resolution is stored for each camera. The cameras can be toggled both from the viewport - as seen here - or while looking through the camera. Camera toggle using the scene properties panel Preferences The preferences provide easy customization for the hotkeys. Easily adjust them to your personal needs. You can also use the auto-updater to automatically update your addon without downloading the zip files from the store pages.","title":"The UI"},{"location":"cam_UI/#the-ui","text":"","title":"The UI"},{"location":"cam_UI/#overview-panel-shift-c","text":"The Overview Panel is the core of the addon. The menu lists all cameras in your scene. It provides a quick overview of the most important settings and an easy way to adjusting them. Additionally, you can assign camera-specific resolution, render slots, and world materials, exceeding the posibilities of the default Blender. The Overview panel contains all cameras and most relevant camera settings in your scene. Toggle the active camera Rename cameras Toggle visibility, selection, and locking of cameras Adjust specific settings like focal length and clipping planes per camera Change output resolution per camera Copy camera resolution from the assigned background image Set the world material (HDRI) per camera to adjust the lighting Set exposure value per camera Move camera to the specified camera collection Assing individual render slots per camera Render any camera directly from this menu Set and assign to Camera Collection Settings: Automatically save renders, use camera name for the file name and set the output folder","title":"Overview Panel (Shift + C)"},{"location":"cam_UI/#scene-properties","text":"The Scene Properties panel contains an addional, compacter version of the camera overview panel. It allows you to rename cameras, change their visibility and locking states and assign them to the specified camera collection quickly.","title":"Scene Properties"},{"location":"cam_UI/#camera-pie-alt-c","text":"This pie menu is intended to tweak the currently active camera. It is split into 4 areas. Background Image and Render Settings: Assign a render slot and render directly from the pie menu. Further, this area contains functionalities to adjust the visibility of background images and toggle them on/off quickly. Camera Settings: Tweak camera-specific values like focal length, exposure, clipping planes, and depth of field. NEW: Dolly Zoom and Toggle to Camera view Viewport Settings: Quickly show and hide composition guides, UI elements and darken the area outside the final frame. Quick Access Tools: Quickly toggle between cameras, lock/unlock, select or lock the current camera to view.","title":"Camera Pie (Alt + C)"},{"location":"cam_UI/#toggle-cameras-ctrl-shift-leftright-arrow","text":"Ctrl + Shift + Left/Right Arrow allows you to quickly toggle between the scene cameras. All camera-specific settings like resolution and world material will automatically be applied. The hotkeys can be changed in the addon preferences. Warning All camera-specific settings - provided by this addon - like world material, exposure, camera resolution and render slot will not be updated when changing the active camera in the scene properties manually. Use the hotkeys and buttons provided by the addon to switch the cameras. Camera toggle using hotkeys: The resolution is stored for each camera. The cameras can be toggled both from the viewport - as seen here - or while looking through the camera. Camera toggle using the scene properties panel","title":"Toggle Cameras (Ctrl + Shift + Left/Right Arrow)"},{"location":"cam_UI/#preferences","text":"The preferences provide easy customization for the hotkeys. Easily adjust them to your personal needs. You can also use the auto-updater to automatically update your addon without downloading the zip files from the store pages.","title":"Preferences"},{"location":"cam_composition/","text":"Composition The Cam-Manager provides multiple tools helping you to setup your cameras and find a good composition. The pie menu is designed to optimize the currently active camera. Overview Panel The Overview Panel (Ctrl + Shift + C) is a valuable tool for the scene composition too. It helps you to keep the bigger picture and quickly compare different shots, angles. It supports you in keeping your cameras organized and keep an overview of the different values. Lock/Unlock Camera Locking and unlocking the cameras is super fast. Unlock the camera swiftly, make all the adjustments you want and lock it afterward to avoid accidental changing the camera position. You can easily lock the camera to the view as well. This allows you to change the camera framing with the common 3D navigation. Camera Settings Quickly adjust camera-specific settings from the viewport Adjusting focal length from the pie menu Adjusting the depth of field from the viewport Viewport settings Use the pie menu to quickly hide and show all UI elements. Display the composition guides to help you find the best framing and darken the area outside the final frame.","title":"Composition"},{"location":"cam_composition/#composition","text":"The Cam-Manager provides multiple tools helping you to setup your cameras and find a good composition. The pie menu is designed to optimize the currently active camera.","title":"Composition"},{"location":"cam_composition/#overview-panel","text":"The Overview Panel (Ctrl + Shift + C) is a valuable tool for the scene composition too. It helps you to keep the bigger picture and quickly compare different shots, angles. It supports you in keeping your cameras organized and keep an overview of the different values.","title":"Overview Panel"},{"location":"cam_composition/#lockunlock-camera","text":"Locking and unlocking the cameras is super fast. Unlock the camera swiftly, make all the adjustments you want and lock it afterward to avoid accidental changing the camera position. You can easily lock the camera to the view as well. This allows you to change the camera framing with the common 3D navigation.","title":"Lock/Unlock Camera"},{"location":"cam_composition/#camera-settings","text":"Quickly adjust camera-specific settings from the viewport Adjusting focal length from the pie menu Adjusting the depth of field from the viewport","title":"Camera Settings"},{"location":"cam_composition/#viewport-settings","text":"Use the pie menu to quickly hide and show all UI elements. Display the composition guides to help you find the best framing and darken the area outside the final frame.","title":"Viewport settings"},{"location":"cam_dolly_zoom/","text":"Dolly Zoom (New in 1.1) A dolly zoom is a cinematic technique in which the camera moves closer or further from the subject while simultaneously adjusting the zoom angle to keep the subject the same size in the frame. The effect is that the subject appears stationary while the background size changes (this is called perspective distortion). Media College UI The dolly zoom can be started from the Camera Pie (Alt + C): The Target The target is a viewport gizmo. It is used both for visualizing the part of the camera cone that will remain static during the dolly zoom and it can also be used to change the distance of the target from the camera. Place the target plane at the object you don't want to move during the dolly zoom. Interations Mouse Movement: This will adjust both distance and focal lenght to perform a camera zoom if no other mode (see below) is enabled. D (Target Distance) You enter the distance mode by pressing D once, pressing it again will leave the mode again. Your mouse movement changes the target distance of the camera in distance mode. This has the same effect as moving the target in the viewport. F (Focal Lenght) Your mouse movement controls the focal lenght, increasing the size of the target. This has the same effect as changing the focal length from the camera properties panel. Alt Keeping alt pressed will ignore other inputs, allowing for larger movements Shift The mouse movement has less effect on the value, allow for finer adjustements Ctrl The mouse movement has more effect on the value, allow for bigger adjustements","title":"Dolly Zoom"},{"location":"cam_dolly_zoom/#dolly-zoom-new-in-11","text":"A dolly zoom is a cinematic technique in which the camera moves closer or further from the subject while simultaneously adjusting the zoom angle to keep the subject the same size in the frame. The effect is that the subject appears stationary while the background size changes (this is called perspective distortion). Media College","title":"Dolly Zoom (New in 1.1)"},{"location":"cam_dolly_zoom/#ui","text":"The dolly zoom can be started from the Camera Pie (Alt + C):","title":"UI"},{"location":"cam_dolly_zoom/#the-target","text":"The target is a viewport gizmo. It is used both for visualizing the part of the camera cone that will remain static during the dolly zoom and it can also be used to change the distance of the target from the camera. Place the target plane at the object you don't want to move during the dolly zoom.","title":"The Target"},{"location":"cam_dolly_zoom/#interations","text":"Mouse Movement: This will adjust both distance and focal lenght to perform a camera zoom if no other mode (see below) is enabled. D (Target Distance) You enter the distance mode by pressing D once, pressing it again will leave the mode again. Your mouse movement changes the target distance of the camera in distance mode. This has the same effect as moving the target in the viewport. F (Focal Lenght) Your mouse movement controls the focal lenght, increasing the size of the target. This has the same effect as changing the focal length from the camera properties panel. Alt Keeping alt pressed will ignore other inputs, allowing for larger movements Shift The mouse movement has less effect on the value, allow for finer adjustements Ctrl The mouse movement has more effect on the value, allow for bigger adjustements","title":"Interations"},{"location":"cam_image_plane/","text":"Precise Modeling Toggle through cameras with different background images and resolutions. Info Check out my artstation blog and final project on Artstation for more information on the workflow outlined in this Having different camera resolutions makes the work with different image planes much easier. You can quickly toggle between the cameras without changing the scene settings every time you change the camera. Quick Background Image Setting Adjust the background image visibility directly from the 3D view. You can toggle the background image on/off directly from the viewport and quickly adjust the opacity. I used these features a lot for my spinning mule project. Note The pie menu only considers the first Background Image per camera. This limitation was added to avoid huge lists of background images in the pie menu. Resolution from Background Image This feature allows you to easily set the camera resolution based on the assigned background image. The feature is available from: Overview Panel (Shift + C) Camera Pie (Alt + C) Properties Panel: Camera data Quickly assigning the proper resolution from the background image. Dolly Zoom A huge issue when working with image planes it to adjust the camera position, rotation and focal lenght. The dolly zoom is a useful tool to keep the target at the same position when adjusting distance and focal lenght.","title":"Precise Modeling"},{"location":"cam_image_plane/#precise-modeling","text":"Toggle through cameras with different background images and resolutions. Info Check out my artstation blog and final project on Artstation for more information on the workflow outlined in this Having different camera resolutions makes the work with different image planes much easier. You can quickly toggle between the cameras without changing the scene settings every time you change the camera.","title":"Precise Modeling"},{"location":"cam_image_plane/#quick-background-image-setting","text":"Adjust the background image visibility directly from the 3D view. You can toggle the background image on/off directly from the viewport and quickly adjust the opacity. I used these features a lot for my spinning mule project. Note The pie menu only considers the first Background Image per camera. This limitation was added to avoid huge lists of background images in the pie menu.","title":"Quick Background Image Setting"},{"location":"cam_image_plane/#resolution-from-background-image","text":"This feature allows you to easily set the camera resolution based on the assigned background image. The feature is available from: Overview Panel (Shift + C) Camera Pie (Alt + C) Properties Panel: Camera data Quickly assigning the proper resolution from the background image.","title":"Resolution from Background Image"},{"location":"cam_image_plane/#dolly-zoom","text":"A huge issue when working with image planes it to adjust the camera position, rotation and focal lenght. The dolly zoom is a useful tool to keep the target at the same position when adjusting distance and focal lenght.","title":"Dolly Zoom"},{"location":"cam_release_notes/","text":"Release Notes 1.1.0 Feuatures Dolly-Zoom operator with Viewport Gizmo Blender 3.0 Support Use camera name for saving renders The Dolly Zoom is the big feature of this release. It is not only a powerful tool in itself, it's also the first tool using a viewport Gizmo, paving the way for future, user-friendly and powerful tools in the addon. fixes #57 The exposure of 0.00 is ignored when switching between cameras. 1.0.0 First official release","title":"Release Notes"},{"location":"cam_release_notes/#release-notes","text":"","title":"Release Notes"},{"location":"cam_release_notes/#110","text":"","title":"1.1.0"},{"location":"cam_release_notes/#100","text":"First official release","title":"1.0.0"},{"location":"collider-tools_auto_convex/","text":"Auto Convex Shape Warning Auto Convex is currently only supported for Windows. Auto Convex is a helpful tool for generating convex colliders of a complex mesh. It works well for complex, organic shapes, like rocks, statues, rubble and debris. It is not the magic one click solution for each asset! Warning Auto Convex required the V-HACD .exe to work. Follow the instructions below to activate it. Download the V-hacd executable from the link below (Download V-hacd). (optional) Copy the downloaded executable to another directory on your hard drive. Press the small folder icon of the 'V-hacd exe' input to open a file browser. Select the V-hacd.exe you have just downloaded before and confirm with 'Accept'. (optional) The auto convex collider requires temporary files to be stored on your pc to allow for the communication of Blender and the V-hacd executable. You can change the directory for storing the temporary data from here. (optional) See the Github page of the V-HACD for more information on the executable. Basic Parameters The amount convex\u00dfhulls and their complexity can mostly be controlled by 2 simple values. Those parameters are exposed to the Collider Tools panel. Parameter name Description Default value Range Depth maximum number of clipping stages. During each split stage, all the model parts (with a concavity higher than the user-defined threshold) are clipped according to the \"best\" clipping plane 3 1-32 Verts per Piece controls the maximum number of triangles per convex-hull 16 4-1024 The parameter description is coming from the original library used: Github: V-hacd Advanced Parameters The advanced parameters can be found in the addon preferences in Auto Convex . The settings are only visible if the VHACD exe is installed. Followind table contains more information on the individual parameters: Parameter name Description Default value Range resolution maximum number of voxels generated during the voxelization stage 100,000 10,000-64,000,000 concavity maximum concavity 0.0025 0.0-1.0 planeDownsampling controls the granularity of the search for the \"best\" clipping plane 4 1-16 convexhullDownsampling controls the precision of the convex-hull generation process during the clipping plane selection stage 4 1-16 alpha controls the bias toward clipping along symmetry planes 0.05 0.0-1.0 beta controls the bias toward clipping along revolution axes 0.05 0.0-1.0 gamma maximum allowed concavity during the merge stage 0.00125 0.0-1.0 pca enable/disable normalizing the mesh before applying the convex decomposition 0 0-1 mode 0: voxel-based approximate convex decomposition, 1: tetrahedron-based approximate convex decomposition 0 0-1 maxNumVerticesPerCH controls the maximum number of triangles per convex-hull 64 4-1024 minVolumePerCH controls the adaptive sampling of the generated convex-hulls 0.0001 0.0-0.01 The parameter description is coming from the original library used: Github: V-hacd","title":"Auto Convex"},{"location":"collider-tools_auto_convex/#auto-convex-shape","text":"Warning Auto Convex is currently only supported for Windows. Auto Convex is a helpful tool for generating convex colliders of a complex mesh. It works well for complex, organic shapes, like rocks, statues, rubble and debris. It is not the magic one click solution for each asset! Warning Auto Convex required the V-HACD .exe to work. Follow the instructions below to activate it. Download the V-hacd executable from the link below (Download V-hacd). (optional) Copy the downloaded executable to another directory on your hard drive. Press the small folder icon of the 'V-hacd exe' input to open a file browser. Select the V-hacd.exe you have just downloaded before and confirm with 'Accept'. (optional) The auto convex collider requires temporary files to be stored on your pc to allow for the communication of Blender and the V-hacd executable. You can change the directory for storing the temporary data from here. (optional) See the Github page of the V-HACD for more information on the executable.","title":"Auto Convex Shape"},{"location":"collider-tools_auto_convex/#basic-parameters","text":"The amount convex\u00dfhulls and their complexity can mostly be controlled by 2 simple values. Those parameters are exposed to the Collider Tools panel. Parameter name Description Default value Range Depth maximum number of clipping stages. During each split stage, all the model parts (with a concavity higher than the user-defined threshold) are clipped according to the \"best\" clipping plane 3 1-32 Verts per Piece controls the maximum number of triangles per convex-hull 16 4-1024 The parameter description is coming from the original library used: Github: V-hacd","title":"Basic Parameters"},{"location":"collider-tools_auto_convex/#advanced-parameters","text":"The advanced parameters can be found in the addon preferences in Auto Convex . The settings are only visible if the VHACD exe is installed. Followind table contains more information on the individual parameters: Parameter name Description Default value Range resolution maximum number of voxels generated during the voxelization stage 100,000 10,000-64,000,000 concavity maximum concavity 0.0025 0.0-1.0 planeDownsampling controls the granularity of the search for the \"best\" clipping plane 4 1-16 convexhullDownsampling controls the precision of the convex-hull generation process during the clipping plane selection stage 4 1-16 alpha controls the bias toward clipping along symmetry planes 0.05 0.0-1.0 beta controls the bias toward clipping along revolution axes 0.05 0.0-1.0 gamma maximum allowed concavity during the merge stage 0.00125 0.0-1.0 pca enable/disable normalizing the mesh before applying the convex decomposition 0 0-1 mode 0: voxel-based approximate convex decomposition, 1: tetrahedron-based approximate convex decomposition 0 0-1 maxNumVerticesPerCH controls the maximum number of triangles per convex-hull 64 4-1024 minVolumePerCH controls the adaptive sampling of the generated convex-hulls 0.0001 0.0-0.01 The parameter description is coming from the original library used: Github: V-hacd","title":"Advanced Parameters"},{"location":"collider-tools_import_engines/","text":"Game Engines The Collider Tools addon covers only the blender side of creating collisions. It does not provide any special importers for 3rd party game engines. The export format in all these cases is fbx. Unreal Engine Guide Unity Guide Naming Presets Collider Tools supports naming presets saved as simple .py files on the file system. You can save naming settings, quickly toggle them if for working on different projects or engines and share the preset files with colleagues. The presets are stored as simple '.py' files stored in the same location as user preferences, addons etc. in Appdata. Path: C:\\Users\\ [ Use Name ] \\AppData\\Roaming\\Blender Foundation\\Blender\\ [ Blender Version ] \\scripts\\presets\\collider_tools This makes it easy to distribute naming patterns with your team. You can download the Unreal Engine and Default Preset files from here. Unreal Engine Naming Preset: Download | View Default Naming Preset: Download | View The presets files are very simple, this is the example of the UE.py file: { import bpy prefs = bpy.context.preferences.addons['collider_tools'].preferences prefs.naming_position = 'PREFIX' prefs.separator = '_' prefs.basename = 'geo' prefs.replace_name = False prefs.colPreSuffix = '' prefs.optionalSuffix = '' prefs.IgnoreShapeForComplex = True prefs.colSimpleComplex = '' prefs.colSimple = '' prefs.colComplex = 'Complex' prefs.boxColSuffix = 'UBX' prefs.convexColSuffix = 'UCX' prefs.sphereColSuffix = 'USP' prefs.meshColSuffix = '' } Other The naming options should allow the Collider Tools addon to be used with a large variety of engines and pipelines. Feel free to contact me if you need help incorporating the addon in your pipeline and proprietary engine.","title":"Game Engine Support"},{"location":"collider-tools_import_engines/#game-engines","text":"The Collider Tools addon covers only the blender side of creating collisions. It does not provide any special importers for 3rd party game engines. The export format in all these cases is fbx. Unreal Engine Guide Unity Guide","title":"Game Engines"},{"location":"collider-tools_import_engines/#naming-presets","text":"Collider Tools supports naming presets saved as simple .py files on the file system. You can save naming settings, quickly toggle them if for working on different projects or engines and share the preset files with colleagues. The presets are stored as simple '.py' files stored in the same location as user preferences, addons etc. in Appdata. Path: C:\\Users\\ [ Use Name ] \\AppData\\Roaming\\Blender Foundation\\Blender\\ [ Blender Version ] \\scripts\\presets\\collider_tools This makes it easy to distribute naming patterns with your team. You can download the Unreal Engine and Default Preset files from here. Unreal Engine Naming Preset: Download | View Default Naming Preset: Download | View The presets files are very simple, this is the example of the UE.py file: { import bpy prefs = bpy.context.preferences.addons['collider_tools'].preferences prefs.naming_position = 'PREFIX' prefs.separator = '_' prefs.basename = 'geo' prefs.replace_name = False prefs.colPreSuffix = '' prefs.optionalSuffix = '' prefs.IgnoreShapeForComplex = True prefs.colSimpleComplex = '' prefs.colSimple = '' prefs.colComplex = 'Complex' prefs.boxColSuffix = 'UBX' prefs.convexColSuffix = 'UCX' prefs.sphereColSuffix = 'USP' prefs.meshColSuffix = '' }","title":"Naming Presets "},{"location":"collider-tools_import_engines/#other","text":"The naming options should allow the Collider Tools addon to be used with a large variety of engines and pipelines. Feel free to contact me if you need help incorporating the addon in your pipeline and proprietary engine.","title":"Other "},{"location":"collider-tools_overview/","text":"Overview Limited support (Health reasons)! I can only offer limited support due to my current health condition! Fixes and support messages might take a little longer and I won't have access to my workstation at all times. Early Bird Sale: The early bird sale will be valid until the 30th of April. Stores Gumroad Blender Market (Coming soon!) What is Collider Tools? Collider Tools is a Blender addon to create physics colliders for games and real-time applications . The addon offers a lot of tools for creating the most common collider types like Box, Sphere, Convex, Convex (cylindrical), Auto Convex (Windows only) , and Mesh quickly and easily within Blender. These colliders can then be imported to engines like UE, Unity , and others. The addon offers big flexibility and controllability by using the selection , both in Object and Edit-mode , as well as offering settings like global or local space generation. Further, the addon supports the generation based on both the original mesh (pre-modifier stack) and the evaluated mesh (post-modifier stack) . Collider Tools offers functionality for organizing the colliders, showing, hiding, and selecting them and tools to automatically generate multiple convex shapes to represent complex meshes (convex decomposition) Feature Overview Quick and simple creation of collider objects. Support for Sphere, Box, Convex, Convex Cylinder , and Mesh shapes. Support for Object- and Edit-mode , including multi-object Edit-mode . Custom colliders can be used in most engines like UE4-5, Unity, and many other engines. Support for Edit mode selection . Create collision only surrounding the selected geometry of each object. Works with multi-edit and modifier stack . Support for creating world-aligned and object-aligned collisions for Boxes and Cylinders. Support for collision creation based on pre or post-modifier stack mesh data. Fast adjustment of creation settings from the 3D Viewport. The collider creation works with modal operators, allowing for user input during the creation. Flexible naming options to support different engine and pipeline needs. Consistent and clean UI overlay in the 3D viewport during the collider creation. Assign materials to be used as physics materials in engines. Convert meshes to colliders and colliders to meshes . Support for different collision groups: complex, simple, simple-complex . Support for Auto convex (Windows only) , convex decomposition, collider creation using V-hacd library. Convex decomposition allows representing complex shapes with multiple convex shapes that could otherwise only be represented with Mesh collisions. Video Coming Soon! Why Collider Tools? Collider tool removes the biggest obstacle for creating colliders in Blender, its lack of specialized tools and therefore time-consuming process for creating colliders. Collider Tools combines the speed and comfort of in-engine tools like the UE collision tools with the power and flexibility of Blender. There are reasons for using Collider Tools over in engine solutions: Creating the colliders in Blender with Collider Tools provides more control than in Engine tools. You can use the full power of Blender to manipulate, adjust the colliders if needed. This can be useful for all kinds of more complex shapes like railings, hollow objects, arches, etc. Creating Compound colliders (multiple colliders for one asset), is much faster with Collider tools than in engine tools since you can use the selection (Object and Edit Mode) for the collider generation. Not all engines over as powerful tools for creating colliders as UE. Collider Tools is quick and easy and can be used to create all kinds of collisions from simple box colliders to very complex compound collider setups. It offers a simple UI and brings the important settings directly into the 3D Viewport, offering more adjustment options than in engine tools: decimate, shrink/flatten. It is convenient creating assets and colliders in one application. You can consider them early on and update both, assets and colliders at the same time if needed. Testimonials What other artists from the games industry say about collider tools: Richard Court - Senior Environment Artist | Studio Gobo This is a must have addon, took all the hassle and tedious work out of creating custom collision. So fast and easy to use, takes care of naming/parenting with support for custom prefixes. Jeremiah Estrellado / Lead Environment Artist / Founder of The Dinusty Empire This is something that a lot of people overlook on how much time it can take up on a project. With how intuitive the tool is as well as being able to support much more complex shapes. its quite impressive how quickly you can get more the useable results. Michael Kinsey - Tech Artist | Counterplay I am a huge fan of addons that reduce the steps and amount of clicks it takes me to do menial tasks. This addon is one of those. Its simple and clean and will save a lot of time for anyone making collision meshes in Blender for use in game engines like Unreal Engine. I wish I had this addon a lot sooner! J\u00e9r\u00e9my Cerisy - Environment Artist | Remedy Entertainment I have been lucky enough to be able to try Collider Tools in the past months and I can tell you that it became directly one of my favorite and most used add-ons. Everything is just so simple and powerful. Now I can create collisions in a matter of seconds for any assets or modular kit and spent all this extra saved time on more creative and fulfilling tasks! Arthur Chamerois - 3D Artist | Bulwark Studios Based on the fact that making collisions is one of the most annoying moments in an art pipeline, I think anyone working in real-time 3D deserves to get through this moment the proper way. That's what this addon allows \ud83d\ude03 Getting started Download and Installation Please purchase the Collider Tools from any of the previous stores. The addon can be installed by going to File > User Preferences > addons . Click at Install from File and specify the downloaded zip file in the newly opened window. Collider Tools should now appear in your addons window and can be activated. Please contact me in case you run into any issues here. Pie Menu: The easiest way to get started is to use the Pie menu (Shift + Ctrl + C). You can find the most important operations from here. Select the objects you want to create a collider for, select the collider type in the pie menu and the interactive","title":"Overview"},{"location":"collider-tools_overview/#overview","text":"","title":"Overview"},{"location":"collider-tools_overview/#limited-support-health-reasons","text":"I can only offer limited support due to my current health condition! Fixes and support messages might take a little longer and I won't have access to my workstation at all times.","title":"Limited support (Health reasons)!"},{"location":"collider-tools_overview/#early-bird-sale","text":"The early bird sale will be valid until the 30th of April.","title":"Early Bird Sale:"},{"location":"collider-tools_overview/#stores","text":"Gumroad Blender Market (Coming soon!)","title":"Stores"},{"location":"collider-tools_overview/#what-is-collider-tools","text":"Collider Tools is a Blender addon to create physics colliders for games and real-time applications . The addon offers a lot of tools for creating the most common collider types like Box, Sphere, Convex, Convex (cylindrical), Auto Convex (Windows only) , and Mesh quickly and easily within Blender. These colliders can then be imported to engines like UE, Unity , and others. The addon offers big flexibility and controllability by using the selection , both in Object and Edit-mode , as well as offering settings like global or local space generation. Further, the addon supports the generation based on both the original mesh (pre-modifier stack) and the evaluated mesh (post-modifier stack) . Collider Tools offers functionality for organizing the colliders, showing, hiding, and selecting them and tools to automatically generate multiple convex shapes to represent complex meshes (convex decomposition)","title":"What is Collider Tools?"},{"location":"collider-tools_overview/#feature-overview","text":"Quick and simple creation of collider objects. Support for Sphere, Box, Convex, Convex Cylinder , and Mesh shapes. Support for Object- and Edit-mode , including multi-object Edit-mode . Custom colliders can be used in most engines like UE4-5, Unity, and many other engines. Support for Edit mode selection . Create collision only surrounding the selected geometry of each object. Works with multi-edit and modifier stack . Support for creating world-aligned and object-aligned collisions for Boxes and Cylinders. Support for collision creation based on pre or post-modifier stack mesh data. Fast adjustment of creation settings from the 3D Viewport. The collider creation works with modal operators, allowing for user input during the creation. Flexible naming options to support different engine and pipeline needs. Consistent and clean UI overlay in the 3D viewport during the collider creation. Assign materials to be used as physics materials in engines. Convert meshes to colliders and colliders to meshes . Support for different collision groups: complex, simple, simple-complex . Support for Auto convex (Windows only) , convex decomposition, collider creation using V-hacd library. Convex decomposition allows representing complex shapes with multiple convex shapes that could otherwise only be represented with Mesh collisions.","title":"Feature Overview"},{"location":"collider-tools_overview/#video","text":"Coming Soon!","title":"Video"},{"location":"collider-tools_overview/#why-collider-tools","text":"Collider tool removes the biggest obstacle for creating colliders in Blender, its lack of specialized tools and therefore time-consuming process for creating colliders. Collider Tools combines the speed and comfort of in-engine tools like the UE collision tools with the power and flexibility of Blender. There are reasons for using Collider Tools over in engine solutions: Creating the colliders in Blender with Collider Tools provides more control than in Engine tools. You can use the full power of Blender to manipulate, adjust the colliders if needed. This can be useful for all kinds of more complex shapes like railings, hollow objects, arches, etc. Creating Compound colliders (multiple colliders for one asset), is much faster with Collider tools than in engine tools since you can use the selection (Object and Edit Mode) for the collider generation. Not all engines over as powerful tools for creating colliders as UE. Collider Tools is quick and easy and can be used to create all kinds of collisions from simple box colliders to very complex compound collider setups. It offers a simple UI and brings the important settings directly into the 3D Viewport, offering more adjustment options than in engine tools: decimate, shrink/flatten. It is convenient creating assets and colliders in one application. You can consider them early on and update both, assets and colliders at the same time if needed.","title":"Why Collider Tools?"},{"location":"collider-tools_overview/#testimonials","text":"What other artists from the games industry say about collider tools: Richard Court - Senior Environment Artist | Studio Gobo This is a must have addon, took all the hassle and tedious work out of creating custom collision. So fast and easy to use, takes care of naming/parenting with support for custom prefixes. Jeremiah Estrellado / Lead Environment Artist / Founder of The Dinusty Empire This is something that a lot of people overlook on how much time it can take up on a project. With how intuitive the tool is as well as being able to support much more complex shapes. its quite impressive how quickly you can get more the useable results. Michael Kinsey - Tech Artist | Counterplay I am a huge fan of addons that reduce the steps and amount of clicks it takes me to do menial tasks. This addon is one of those. Its simple and clean and will save a lot of time for anyone making collision meshes in Blender for use in game engines like Unreal Engine. I wish I had this addon a lot sooner! J\u00e9r\u00e9my Cerisy - Environment Artist | Remedy Entertainment I have been lucky enough to be able to try Collider Tools in the past months and I can tell you that it became directly one of my favorite and most used add-ons. Everything is just so simple and powerful. Now I can create collisions in a matter of seconds for any assets or modular kit and spent all this extra saved time on more creative and fulfilling tasks! Arthur Chamerois - 3D Artist | Bulwark Studios Based on the fact that making collisions is one of the most annoying moments in an art pipeline, I think anyone working in real-time 3D deserves to get through this moment the proper way. That's what this addon allows \ud83d\ude03","title":"Testimonials"},{"location":"collider-tools_overview/#getting-started","text":"","title":"Getting started"},{"location":"collider-tools_overview/#download-and-installation","text":"Please purchase the Collider Tools from any of the previous stores. The addon can be installed by going to File > User Preferences > addons . Click at Install from File and specify the downloaded zip file in the newly opened window. Collider Tools should now appear in your addons window and can be activated. Please contact me in case you run into any issues here.","title":"Download and Installation"},{"location":"collider-tools_overview/#pie-menu","text":"The easiest way to get started is to use the Pie menu (Shift + Ctrl + C). You can find the most important operations from here. Select the objects you want to create a collider for, select the collider type in the pie menu and the interactive","title":"Pie Menu:"},{"location":"collider-tools_physics_materials/","text":"Physics Materials Some engines support physics materials for colliders. They can be used to differentiate different materials on impact and trigger different sound effects, or VFX based on the materials (e.g., different footprints and step sounds based on the ground material) Collider Tools uses Blenders internal material system to specify the physics materials. You can specify the physics material used from a drop-down menu in the properties panel. Further, you can specify a filter. E.g., you can filter all materials that contain the string \"COL_\". Only materials that contain \"COL_\" in their name will be shown in the drop-down menu. You can also change the material later on like for any regular mesh object.","title":"Physics Materials"},{"location":"collider-tools_physics_materials/#physics-materials","text":"Some engines support physics materials for colliders. They can be used to differentiate different materials on impact and trigger different sound effects, or VFX based on the materials (e.g., different footprints and step sounds based on the ground material) Collider Tools uses Blenders internal material system to specify the physics materials. You can specify the physics material used from a drop-down menu in the properties panel. Further, you can specify a filter. E.g., you can filter all materials that contain the string \"COL_\". Only materials that contain \"COL_\" in their name will be shown in the drop-down menu. You can also change the material later on like for any regular mesh object.","title":"Physics Materials"},{"location":"collider-tools_release_notes/","text":"Release Notes 1.0.0 Initial Release","title":"Release Notes"},{"location":"collider-tools_release_notes/#release-notes","text":"","title":"Release Notes"},{"location":"collider-tools_release_notes/#100","text":"Initial Release","title":"1.0.0"},{"location":"collider-tools_ue_guidline/","text":"Unreal Engine UE4 and UE5 support the import of Simple and partially Complex collisions. UE4 Supported Simple Collision shapes imported to UE4. UE5 Supported Simple Collision shapes imported to UE5. Overview UE differentiates between 2 types of colliders: Simple and Complex Collisions. Simple Collisions will be the focus of this guide. Complex Collisions in UE use usually visual mesh geometry. In Unreal Engine, you have access to simple and complex collision shapes. Simple Collisions are primitives like cubes, spheres, capsules, and convex hulls. Complex Collision is the trimesh of a given object. By default, Unreal Engine creates both simple and complex shapes, then, based on what the user wants (complex query versus simple query), the physics solver will use the corresponding shape for scene queries and collision tests. UE4 Documentation: Simple versus Complex Collision Simple collision can be detected automatically upon import. You must use the proper naming pattern for it to work! The required naming can be found in the following table from the UE4 Documentation: FBX Static Mesh Pipeline Collision Mesh Prefix and Name Description UBX_[RenderMeshName]_## A Box must be created using a regular rectangular 3D object. You cannot move the vertices around or deform it in any way to make it something other than a rectangular prism, or else it will not work. UCP_[RenderMeshName]_## A Capsule must be a cylindrical object capped with hemispheres. It does not need to have many segments (8 is a good number) at all because it is converted into a true capsule for collision. Like boxes, you should not move the individual vertices around. USP_[RenderMeshName]_## A Sphere does not need to have many segments (8 is a good number) at all because it is converted into a true sphere for collision. Like boxes, you should not move the individual vertices around. UCX_[RenderMeshName]_## A Convex object can be any completely closed convex 3D shape. For example, a box can also be a convex object. The diagram below illustrates what is convex and what is not: Warning Unreal Engine does not support mesh colliders for simple collisions. They are therefore missing from the list above. You can either split the shape in convex collisions (e.g., auto convex) or use Complex Collision as Simple Collision. Complex Collisions are not supported for dynamic objects. The following image illustrates the addon preferences to achieve the needed naming. This should be the addon's default settings. You can see an example of how the naming could look at the top with the given settings. In this case: UBX_Suzanne_001, assuming the original mesh was named Suzanne. Note You can donwload the Unreal Engine Naming Preset from here: Download | View . You find more informations and instructions on how to install it here Game Engine Support Setup Simple Collision Setup the naming in the Collider Addon preferences according to UE naming conventions. Export the Asset together with the correctly named colliders. There are no special export settings. Import the asset to Unreal Engine. There are no special import settings related to colliders. UE detects the collider naming and converts them into the appropriate collider shape. (optional) Disable Auto Generate Collision. Auto Generate Collision will generate collisions for assets that don't use any custom colliders. (optional) Assign Physics Material to the Simple Collision. You can set up the Physics collision for the simple collision shape from the Static Mesh Editor -> Collision -> Simple Collision Physical Material . Double check the Simple Collision from either the Static Mesh Editor or place the Meshes in the scene. Alt + C This workflow can be used with many collisions. Setup Complex Collision Complex Collisions must be exported as a separate individual asset. They will be assigned to the asset later on in UE. There is no automatic pipeline set up for it. Export the asset, that can have simple collisions, and the complex collisions as 2 different assets. Import both the asset and the complex collision. You will have 2 assets in the UE asset browser. Open the Static Mesh Editor for the asset. Assign the complex collision asset to the Complex Collision Mesh in the Collision Panel. You can activate the preview from the viewport Show -> * Complex Collision . The Complex Collision should appear in dark blue and replace the light blue wireframe of the original mesh. Mesh Collision: Use Complex Collision As Simple It is indirectly possible to have Mesh Colliders by forcing the Simple Collision to Use the Complex Collision and replacing the Complex Collision as described before. The setting can be found in the Static Mesh Editor -> Collision -> Collision Complexity Warning There appears to be a bug, both in UE4 and UE5. The collision debugs views falsely draw the asset wireframe instead of the custom Complex Collision Mesh when using Complex Collision As Simple . The simulation however seems to be correct and uses the custom Complex Collision Mesh. The example shows that even if the collisions are not updated in the debug view, the collision is taken into account. Not the visible mesh wireframe is used for the complex shape, as suggested from the debug view. Unfortunately, I choose a bad perspective to capture the gifs. The following image shows how the shapes are expected to look. I did more tests than shown here: Physics Materials for Complex Collisions: Warning Physics material for Complex Collisions are not part of the colliders but rather the standard materials of the asset. It does not make sense trying to support any specific features for it in a Blender addon. UE4 Documentation: Physical Materials User Guide Create Custom Collision Types: UE4 Documentation: Add Custom Collision Types","title":"UE Guide"},{"location":"collider-tools_ue_guidline/#unreal-engine","text":"UE4 and UE5 support the import of Simple and partially Complex collisions. UE4 Supported Simple Collision shapes imported to UE4. UE5 Supported Simple Collision shapes imported to UE5.","title":"Unreal Engine"},{"location":"collider-tools_ue_guidline/#overview","text":"UE differentiates between 2 types of colliders: Simple and Complex Collisions. Simple Collisions will be the focus of this guide. Complex Collisions in UE use usually visual mesh geometry. In Unreal Engine, you have access to simple and complex collision shapes. Simple Collisions are primitives like cubes, spheres, capsules, and convex hulls. Complex Collision is the trimesh of a given object. By default, Unreal Engine creates both simple and complex shapes, then, based on what the user wants (complex query versus simple query), the physics solver will use the corresponding shape for scene queries and collision tests. UE4 Documentation: Simple versus Complex Collision Simple collision can be detected automatically upon import. You must use the proper naming pattern for it to work! The required naming can be found in the following table from the UE4 Documentation: FBX Static Mesh Pipeline Collision Mesh Prefix and Name Description UBX_[RenderMeshName]_## A Box must be created using a regular rectangular 3D object. You cannot move the vertices around or deform it in any way to make it something other than a rectangular prism, or else it will not work. UCP_[RenderMeshName]_## A Capsule must be a cylindrical object capped with hemispheres. It does not need to have many segments (8 is a good number) at all because it is converted into a true capsule for collision. Like boxes, you should not move the individual vertices around. USP_[RenderMeshName]_## A Sphere does not need to have many segments (8 is a good number) at all because it is converted into a true sphere for collision. Like boxes, you should not move the individual vertices around. UCX_[RenderMeshName]_## A Convex object can be any completely closed convex 3D shape. For example, a box can also be a convex object. The diagram below illustrates what is convex and what is not: Warning Unreal Engine does not support mesh colliders for simple collisions. They are therefore missing from the list above. You can either split the shape in convex collisions (e.g., auto convex) or use Complex Collision as Simple Collision. Complex Collisions are not supported for dynamic objects. The following image illustrates the addon preferences to achieve the needed naming. This should be the addon's default settings. You can see an example of how the naming could look at the top with the given settings. In this case: UBX_Suzanne_001, assuming the original mesh was named Suzanne. Note You can donwload the Unreal Engine Naming Preset from here: Download | View . You find more informations and instructions on how to install it here Game Engine Support","title":"Overview"},{"location":"collider-tools_ue_guidline/#setup-simple-collision","text":"Setup the naming in the Collider Addon preferences according to UE naming conventions. Export the Asset together with the correctly named colliders. There are no special export settings. Import the asset to Unreal Engine. There are no special import settings related to colliders. UE detects the collider naming and converts them into the appropriate collider shape. (optional) Disable Auto Generate Collision. Auto Generate Collision will generate collisions for assets that don't use any custom colliders. (optional) Assign Physics Material to the Simple Collision. You can set up the Physics collision for the simple collision shape from the Static Mesh Editor -> Collision -> Simple Collision Physical Material . Double check the Simple Collision from either the Static Mesh Editor or place the Meshes in the scene. Alt + C This workflow can be used with many collisions.","title":"Setup Simple Collision"},{"location":"collider-tools_ue_guidline/#setup-complex-collision","text":"Complex Collisions must be exported as a separate individual asset. They will be assigned to the asset later on in UE. There is no automatic pipeline set up for it. Export the asset, that can have simple collisions, and the complex collisions as 2 different assets. Import both the asset and the complex collision. You will have 2 assets in the UE asset browser. Open the Static Mesh Editor for the asset. Assign the complex collision asset to the Complex Collision Mesh in the Collision Panel. You can activate the preview from the viewport Show -> * Complex Collision . The Complex Collision should appear in dark blue and replace the light blue wireframe of the original mesh.","title":"Setup Complex Collision"},{"location":"collider-tools_ue_guidline/#mesh-collision-use-complex-collision-as-simple","text":"It is indirectly possible to have Mesh Colliders by forcing the Simple Collision to Use the Complex Collision and replacing the Complex Collision as described before. The setting can be found in the Static Mesh Editor -> Collision -> Collision Complexity Warning There appears to be a bug, both in UE4 and UE5. The collision debugs views falsely draw the asset wireframe instead of the custom Complex Collision Mesh when using Complex Collision As Simple . The simulation however seems to be correct and uses the custom Complex Collision Mesh. The example shows that even if the collisions are not updated in the debug view, the collision is taken into account. Not the visible mesh wireframe is used for the complex shape, as suggested from the debug view. Unfortunately, I choose a bad perspective to capture the gifs. The following image shows how the shapes are expected to look. I did more tests than shown here:","title":"Mesh Collision: Use Complex Collision As Simple"},{"location":"collider-tools_ue_guidline/#physics-materials-for-complex-collisions","text":"Warning Physics material for Complex Collisions are not part of the colliders but rather the standard materials of the asset. It does not make sense trying to support any specific features for it in a Blender addon. UE4 Documentation: Physical Materials User Guide Create Custom Collision Types: UE4 Documentation: Add Custom Collision Types","title":"Physics Materials for Complex Collisions:"},{"location":"collider-tools_ui/","text":"The UI The Collider Tools addon has a simple but powerful UI. The main elements of the UI are the Pie Menu, The Collider Panel in the properties panel (N-panel), the preferences for lesson often used settings, and the Viewport elements appearing during the creation. Pie Menu (Shift + Ctrl + C) The pie menu can be accessed by pressing Shift + Ctrl + C in the 3D viewport. It is the fastest and most convenient way to generate colliders. Start the collider creation operation (Box, Convex, Cylindrical, Sphere, Mesh). Visibility and Selection. Show/Hide and Select/Unselect colliders. You can group colliders by complexity and change the visibility or selection for each group or all. Convert mesh to collider and collider to mesh. You can also convert every mesh to be a collider. All collider-specific properties and naming conventions will be applied to the converted mesh. You can also convert any collider to be a regular mesh. This removes all collider-specific properties from the mesh. Auto Convex Collision Panel The Collision Panel is located in the properties panel (or N-Panel) and offers the same functionality as the pie menu and more. Visibility and Selection: Show/Hide and Select/Unselect colliders Physics Materials: Filter and assign physics materials to newly created colliders Create Colliders: Start the collider creation operation (Box, Convex, Cylindrical, Sphere, Mesh) Auto Convex: Start the auto convex collider creation. This required the V-hacd executable to be assigned. See: Auto Convex Conversion: Mesh <-> Collider: Convert any regular mesh to a collider or the other way around Viewport Overlays Most operations of this addon will enter a special mode, the so-called modal operator in Blender. This happens for any of the collider shape tools, the auto convex, and the conversion operation from mesh to collider. You can use different keys and mouse movements to modify the generation of the colliders. The options presented are operator sensitive, meaning that not all operators will show the same options. The current values and the keys to manipulate the values are shown in the viewport overlay as seen below. The following list contains all keys and settings for the different operators as well. Operators Settings: Properties are reset every time the operator is called. Persistent Settings: Value changes will be remembered in future operator calls. Table of all Overlay settings Preferences The preferences contain customization various options like naming, addon keymap, addon theme and auto convex collider generation. Settings: Change the naming pattern used to name the colliders as well as other generic settings; should they be linked to a \"Collision\" collection Theme: Change the colors of collision groups (Simple, Complex, Simple_Complex) as well as the UI colors and size of the Viewport Overlay appearing during the collider creation. Keymap: Change the hotkeys for the Pie Menu (Shift + Ctrl + C) to any key combination you want - Auto Convex: Contains all settings related to Auto Convex collider generation.","title":"The UI"},{"location":"collider-tools_ui/#the-ui","text":"The Collider Tools addon has a simple but powerful UI. The main elements of the UI are the Pie Menu, The Collider Panel in the properties panel (N-panel), the preferences for lesson often used settings, and the Viewport elements appearing during the creation.","title":"The UI"},{"location":"collider-tools_ui/#pie-menu-shift-ctrl-c","text":"The pie menu can be accessed by pressing Shift + Ctrl + C in the 3D viewport. It is the fastest and most convenient way to generate colliders. Start the collider creation operation (Box, Convex, Cylindrical, Sphere, Mesh). Visibility and Selection. Show/Hide and Select/Unselect colliders. You can group colliders by complexity and change the visibility or selection for each group or all. Convert mesh to collider and collider to mesh. You can also convert every mesh to be a collider. All collider-specific properties and naming conventions will be applied to the converted mesh. You can also convert any collider to be a regular mesh. This removes all collider-specific properties from the mesh. Auto Convex","title":"Pie Menu (Shift + Ctrl + C)"},{"location":"collider-tools_ui/#collision-panel","text":"The Collision Panel is located in the properties panel (or N-Panel) and offers the same functionality as the pie menu and more. Visibility and Selection: Show/Hide and Select/Unselect colliders Physics Materials: Filter and assign physics materials to newly created colliders Create Colliders: Start the collider creation operation (Box, Convex, Cylindrical, Sphere, Mesh) Auto Convex: Start the auto convex collider creation. This required the V-hacd executable to be assigned. See: Auto Convex Conversion: Mesh <-> Collider: Convert any regular mesh to a collider or the other way around","title":"Collision Panel"},{"location":"collider-tools_ui/#viewport-overlays","text":"Most operations of this addon will enter a special mode, the so-called modal operator in Blender. This happens for any of the collider shape tools, the auto convex, and the conversion operation from mesh to collider. You can use different keys and mouse movements to modify the generation of the colliders. The options presented are operator sensitive, meaning that not all operators will show the same options. The current values and the keys to manipulate the values are shown in the viewport overlay as seen below. The following list contains all keys and settings for the different operators as well. Operators Settings: Properties are reset every time the operator is called. Persistent Settings: Value changes will be remembered in future operator calls. Table of all Overlay settings","title":"Viewport Overlays"},{"location":"collider-tools_ui/#preferences","text":"The preferences contain customization various options like naming, addon keymap, addon theme and auto convex collider generation. Settings: Change the naming pattern used to name the colliders as well as other generic settings; should they be linked to a \"Collision\" collection Theme: Change the colors of collision groups (Simple, Complex, Simple_Complex) as well as the UI colors and size of the Viewport Overlay appearing during the collider creation. Keymap: Change the hotkeys for the Pie Menu (Shift + Ctrl + C) to any key combination you want - Auto Convex: Contains all settings related to Auto Convex collider generation.","title":"Preferences"},{"location":"collider-tools_unity_guidline/","text":"Unity The collider import and setup in Unity is very simple. The following documentation is a guide on how to get the collisions from Blender to Unity. It will also reference the well-written Unity documentation, for more information on the Physics system in Unity and how the colliders are used by it. Overview You can find detailed information on the collision setup in Unity in their documentation. Unity Documentation: Colliders Unity Documentation: Rigidbody Unity supports the following Collider shapes relevant to this addon: Unity Documentation: Box Collider Unity Documentation: Sphere Collider Unity Documentation: Mesh Collider Note Convex Colliders are also handled by the Mesh Collider Component. The Mesh Collider has a checkbox to select convex shapes. Convex Mesh Colliders are limited to 255 triangles. Setup There are no setup requirements or naming guidelines for exporting colliders to Unity. you can set them up according to your project guidelines or preferences. Export the asset as fbx, together with all its colliders. Import the asset to Unity. You can use the same export/import settings as usual. Drag the asset into the scene. The colliders are visible. Disable Mesh Renderer for all colliders meshes. Select the colliders from Hierarchy, go to the Inspector and remove the checkbox from the Mesh Renderer Add Collider Component to the collider mesh. Go to the Inspector -> Add Component -> Box Collider (or whatever collider type you have) (optional) Is it a dynamic object? If so, add Rigidbody component to the asset parent. To do so, go to Inspector -> Add Component -> Rigidbody (optional) The collider component has a Physics Matreial input Material that can be used to assign Physics materials to collisons. See: Unity Documentation: Physic Material for more information on physics materials. Other Warning It appears that Unity is optimizing all the Convex Mesh Collider geometry even if the triangle max of 255 is not reached. See example above. The following image shows an example with more complexity. Only the parent contains a Rigidbody component. All colliders in the hierarchy below will function as 1 compound collider. Unity supports multi-edit for all selected entities. You can easily disable Mesh Renderer for all colliders at once and assign the correct collider type based on the naming. In this case, consistent naming comes in handy.","title":"Unity Guide"},{"location":"collider-tools_unity_guidline/#unity","text":"The collider import and setup in Unity is very simple. The following documentation is a guide on how to get the collisions from Blender to Unity. It will also reference the well-written Unity documentation, for more information on the Physics system in Unity and how the colliders are used by it.","title":"Unity "},{"location":"collider-tools_unity_guidline/#overview","text":"You can find detailed information on the collision setup in Unity in their documentation. Unity Documentation: Colliders Unity Documentation: Rigidbody Unity supports the following Collider shapes relevant to this addon: Unity Documentation: Box Collider Unity Documentation: Sphere Collider Unity Documentation: Mesh Collider Note Convex Colliders are also handled by the Mesh Collider Component. The Mesh Collider has a checkbox to select convex shapes. Convex Mesh Colliders are limited to 255 triangles.","title":"Overview"},{"location":"collider-tools_unity_guidline/#setup","text":"There are no setup requirements or naming guidelines for exporting colliders to Unity. you can set them up according to your project guidelines or preferences. Export the asset as fbx, together with all its colliders. Import the asset to Unity. You can use the same export/import settings as usual. Drag the asset into the scene. The colliders are visible. Disable Mesh Renderer for all colliders meshes. Select the colliders from Hierarchy, go to the Inspector and remove the checkbox from the Mesh Renderer Add Collider Component to the collider mesh. Go to the Inspector -> Add Component -> Box Collider (or whatever collider type you have) (optional) Is it a dynamic object? If so, add Rigidbody component to the asset parent. To do so, go to Inspector -> Add Component -> Rigidbody (optional) The collider component has a Physics Matreial input Material that can be used to assign Physics materials to collisons. See: Unity Documentation: Physic Material for more information on physics materials.","title":"Setup"},{"location":"collider-tools_unity_guidline/#other","text":"Warning It appears that Unity is optimizing all the Convex Mesh Collider geometry even if the triangle max of 255 is not reached. See example above. The following image shows an example with more complexity. Only the parent contains a Rigidbody component. All colliders in the hierarchy below will function as 1 compound collider. Unity supports multi-edit for all selected entities. You can easily disable Mesh Renderer for all colliders at once and assign the correct collider type based on the naming. In this case, consistent naming comes in handy.","title":"Other"},{"location":"collision_shapes/","text":"Collision Shapes An overview of all the supported Collision shapes of the Collider Tools addon. Collision Creation Collider Tools supports a wide variety of collision shapes and settings to create them. Box Collision Box collisions are simple, efficient, and cover a wide range of use-cases. Sphere Collision Sphere Collisions are the most efficient type of Collision shapes. Sphere collisions are usually represented by a mathematical description (location and radius) rather than polygons. The sphere meshes created by the addon are intended as a visual representation. Sphere collisions will become more expensive if they are imported as convex shapes or mesh shapes. The sphere generation uses a fast algorithm that does not always provide the optimal result. This happens especially for simple box meshes. The results become better with more complex collisions. Improving or replacing the algorithm is planned for future releases. Convex Collision Convex shapes are versatile while being efficient. They can be used to represent most objects, especially for engines that don't support triangle mesh collisions Convex (Cylindrical) Collision There is no special cylindrical collision type. This is only a tool to help create a clean cylindrical convex shape. Cylindrical shapes are very common shapes, especially in manmade structures. Physics engines will interpret them as simple convex colliders. Mesh Collision Mesh Collisions are the most complex type of collision. Use them carefully, minimize the triangle count as much as possible and use them (only) for static objects. Convert You can convert any mesh to be a collider as well as any collider to be a regular mesh. Mesh to Collider You can convert any mesh to be a collider. The conversion applies the same properties as to other collisions created with the operators from above. The objects will be renamed, added to the collision collection, and can be hidden/selected as all the other colliders. Warning Mest to Collider does currently des only support Use Replace Name , not taking the current object name into account. Collider to Mesh Collider to Mesh will remove all the collider-specific properties and materials. Convert to Mesh opens a pop-up window to set the new object name. Overlay Settings, Inputs and Keys This table contains all settings exposed to the user during the creation of a collider. Key Name Inputs Settings Supported Regenerate Esc, RMB Cancel Cancel will abroad the current operation and remove the temporary colliders of this operation All No Enter, LMB Finish Applies the current operation All No H Hide After Creation Bool The collisions will be hidden after finishing the creation. All No P Use Modifier Stack Bool If Use Modifier Stack is enabled, the collision will be generated based on the visible mesh, taking changes from the modifier stack into account. All Yes W Display Wireframe Enum Off: There is no wireframe preview on the collision mesh Preview: The wireframes are only visible during the generation Always: The wireframes remain visible afterwards All No V Viewport Mode Enum OBJECT: Show Object Color MATERIAL: Show Material Color SINGLE: Show Single Color All No G/L Global/Local Enum Global : The object rotation is ignored and the collision is generated based on the world transformation of the vertices. The result will be the same as when appying the rotation of the object and calling the collision operator with Local Space. Local : The object rotation is taken into account. Box, Cylinder Yes X/Y/Z Cylinder Orientation Enum Cylinder Yes T Collision type Enum SIMPLE_COMPLEX: SIMPLE: COMPLEX All No C Collision Shape Enum BOX SPHERE CONVEX TRIANGLE MESH The shapes are used for the naming. Convert to No A Alpha Modal Object Opacity All No S Shrink Inflate Modal Non-destructive shrink or inflate of the geometry based on the face normal. The operation uses the displace modifier and is therefore non-destructive and can be adjusted at a later point. All No D Decimate Modal Adds a decimate modifier to reduce the geometry density. The values go from 1 to 0, 1 means the object remains unchanged while 0 means it will be reduced to the minimum. Convex Mesh Convert V-hacd Yes R Sphere resolution Modal Segments and Rings of the Sphere (Rings = Segments / 2) Sphere Yes E Segments Modal The amount of segments used to describe the circular shape of the cylinder. Cylinder Yes Value Input (Modal) Some settings, like shrink/inflate, use the mouse movement for changing the settings. The sensitivity and way how the mouse movement affects the settings can be adjusted by pressing manipulator keys like Ctrl , Shift , and Alt . Key Name Description Ctrl Snap Round value Shift Tweak The mouse movement is more precise to allow for smaller changes. Alt Ignore All input is ignored. You can move the mouse back to allow for bigger value changes. System Console The system console can be opened from Blenders main menu -> Windows -> Toggle System Console and contains information about the computation time. The information displayed here is very basic, but could be extended in the future. This feature was implemented for being able to compare computation times.","title":"Collider Shapes"},{"location":"collision_shapes/#collision-shapes","text":"An overview of all the supported Collision shapes of the Collider Tools addon.","title":"Collision Shapes"},{"location":"collision_shapes/#collision-creation","text":"Collider Tools supports a wide variety of collision shapes and settings to create them.","title":"Collision Creation"},{"location":"collision_shapes/#box-collision","text":"Box collisions are simple, efficient, and cover a wide range of use-cases.","title":"Box Collision"},{"location":"collision_shapes/#sphere-collision","text":"Sphere Collisions are the most efficient type of Collision shapes. Sphere collisions are usually represented by a mathematical description (location and radius) rather than polygons. The sphere meshes created by the addon are intended as a visual representation. Sphere collisions will become more expensive if they are imported as convex shapes or mesh shapes. The sphere generation uses a fast algorithm that does not always provide the optimal result. This happens especially for simple box meshes. The results become better with more complex collisions. Improving or replacing the algorithm is planned for future releases.","title":"Sphere Collision"},{"location":"collision_shapes/#convex-collision","text":"Convex shapes are versatile while being efficient. They can be used to represent most objects, especially for engines that don't support triangle mesh collisions","title":"Convex Collision"},{"location":"collision_shapes/#convex-cylindrical-collision","text":"There is no special cylindrical collision type. This is only a tool to help create a clean cylindrical convex shape. Cylindrical shapes are very common shapes, especially in manmade structures. Physics engines will interpret them as simple convex colliders.","title":"Convex (Cylindrical) Collision"},{"location":"collision_shapes/#mesh-collision","text":"Mesh Collisions are the most complex type of collision. Use them carefully, minimize the triangle count as much as possible and use them (only) for static objects.","title":"Mesh Collision"},{"location":"collision_shapes/#convert","text":"You can convert any mesh to be a collider as well as any collider to be a regular mesh.","title":"Convert"},{"location":"collision_shapes/#mesh-to-collider","text":"You can convert any mesh to be a collider. The conversion applies the same properties as to other collisions created with the operators from above. The objects will be renamed, added to the collision collection, and can be hidden/selected as all the other colliders. Warning Mest to Collider does currently des only support Use Replace Name , not taking the current object name into account.","title":"Mesh to Collider"},{"location":"collision_shapes/#collider-to-mesh","text":"Collider to Mesh will remove all the collider-specific properties and materials. Convert to Mesh opens a pop-up window to set the new object name.","title":"Collider to Mesh"},{"location":"collision_shapes/#overlay-settings-inputs-and-keys","text":"This table contains all settings exposed to the user during the creation of a collider. Key Name Inputs Settings Supported Regenerate Esc, RMB Cancel Cancel will abroad the current operation and remove the temporary colliders of this operation All No Enter, LMB Finish Applies the current operation All No H Hide After Creation Bool The collisions will be hidden after finishing the creation. All No P Use Modifier Stack Bool If Use Modifier Stack is enabled, the collision will be generated based on the visible mesh, taking changes from the modifier stack into account. All Yes W Display Wireframe Enum Off: There is no wireframe preview on the collision mesh Preview: The wireframes are only visible during the generation Always: The wireframes remain visible afterwards All No V Viewport Mode Enum OBJECT: Show Object Color MATERIAL: Show Material Color SINGLE: Show Single Color All No G/L Global/Local Enum Global : The object rotation is ignored and the collision is generated based on the world transformation of the vertices. The result will be the same as when appying the rotation of the object and calling the collision operator with Local Space. Local : The object rotation is taken into account. Box, Cylinder Yes X/Y/Z Cylinder Orientation Enum Cylinder Yes T Collision type Enum SIMPLE_COMPLEX: SIMPLE: COMPLEX All No C Collision Shape Enum BOX SPHERE CONVEX TRIANGLE MESH The shapes are used for the naming. Convert to No A Alpha Modal Object Opacity All No S Shrink Inflate Modal Non-destructive shrink or inflate of the geometry based on the face normal. The operation uses the displace modifier and is therefore non-destructive and can be adjusted at a later point. All No D Decimate Modal Adds a decimate modifier to reduce the geometry density. The values go from 1 to 0, 1 means the object remains unchanged while 0 means it will be reduced to the minimum. Convex Mesh Convert V-hacd Yes R Sphere resolution Modal Segments and Rings of the Sphere (Rings = Segments / 2) Sphere Yes E Segments Modal The amount of segments used to describe the circular shape of the cylinder. Cylinder Yes","title":" Overlay Settings, Inputs and Keys"},{"location":"collision_shapes/#value-input-modal","text":"Some settings, like shrink/inflate, use the mouse movement for changing the settings. The sensitivity and way how the mouse movement affects the settings can be adjusted by pressing manipulator keys like Ctrl , Shift , and Alt . Key Name Description Ctrl Snap Round value Shift Tweak The mouse movement is more precise to allow for smaller changes. Alt Ignore All input is ignored. You can move the mouse back to allow for bigger value changes.","title":"Value Input (Modal)"},{"location":"collision_shapes/#system-console","text":"The system console can be opened from Blenders main menu -> Windows -> Toggle System Console and contains information about the computation time. The information displayed here is very basic, but could be extended in the future. This feature was implemented for being able to compare computation times.","title":"System Console"},{"location":"renaming/","text":"Simple Renaming Panel Introduction Simple Renaming Panel is a small, but powerful tool to rename more objects at once. The tool includes basic functionalities of adding suffixes, prefixes, search and replace, add suffixes depending on the object type and much more. Over the time more advanced features like a variable system were added. The tool gives a lot of power to you! You decide which kind of objects will be affected by the renaming task. Rename all or just selected objects, specify the affected object types like image textures, materials, objects, object data, bones, or collections. This tool can be a real everyday helper. Renaming multiple objects is often needed and keeping the naming conventions can be tedious. The tool provides you with a clear feedback of what has been renamed. This tool is kept simple to be user friendly but offers everything you need to stay organized. Join the discussion at Blender Artists . You can thank me by leaving a rating at Gumroad or sponsor a coffee. Download and Installation You can download the Simple Renaming Panel for blender 2.79 and blender 2.80 from the releases section here . Like any other Add-on, you can simply install it by going to File > User Preferences > Add-ons and click at the button Install from File . In the new opened window choose the .zip file of the addon and press Install from file . The Simple Renaming Panel should now appear in your add-ons window and can be activated. Once installed, you can use the auto updater in the user preferences to get the latest version of the addon. Renaming Panel The renaming panel is the heart of the application. It provides you with a simple and an advanced UI option. It can either be found in the properties panel or by pressing the user defined hotkey. Choose which kind of objects you want to rename: Changes affect selected or all Replace names with a new name Search and replace Search and select Match case for the search and replace Use regular expressions to improve your search Add prefixes Add suffixes Numerate objects Trim string Data: Keeping the object data names clear and organized can be painful in blender, this button simply renames the data according to the objects and adds a specified suffix. Key Feature: Works for objects, materials, collections, image textures, object data and bones Choose if all or just selected objects should be affected Restrict renaming operation to specific object types (meshes, curves, empties, cameras, metaballs, light probes, volume objects etc.) Search and replace Match case option for search and replace Regex Support Add suffixes and prefixes Numerate Trim names Rename object data after object name Add suffixes or prefixes by specific object types Simple and clean UI Customizable UI position Auto updater Improved Basic UI I have improved the UI based on the input from Bookyakuno. This makes it easier to use, while keeping the efficiency from before. Advanced UI (Experimental) You can specify the number of leading zeros next to the new name input. Every # represents one 0. You can also disable the automated numeration completely. This is especially useful for the newly introduced variables. Additional Buttons allow you to easily add these variables and show you which ones are available for this renaming process. This UI is still WIP. Search and Select The search can now be used to select objects. This uses works with the settings for renaming like only effecting selected and objects of a certain type. This feature works for object renaming as well as bone renaming in pose mode. Warning Known Issues: Time: Ignores the current time zone and uses always Coordinated Universal Time (UTC) The selection order is still ignored Be careful with using the renaming variable for @p for the parent object Type Suffix Prefix The suffix prefix panel is collapsed as it is not used as regularly as the main renaming panel. The panel is used to add prefixes or suffixes based on the object type. It's a quick way to add e.g., \"_geo\" to meshes, \"_empt\" to empties, and \"_cam\" to cameras with one single click. The presets allow you to easily save different naming conventions for different projects. Choose between Suffix and Prefix Geometry: all meshes Material: all materials Empty: all empty objects Curve: all curves Armature: all armatures objects (not bones) Group: all groups Lattice: all lattices Data: all object data Surfaces: all surface objects Cameras : all cameras Lights: all lights Bones: all bones","title":"Overview"},{"location":"renaming/#simple-renaming-panel","text":"","title":"Simple Renaming Panel"},{"location":"renaming/#introduction","text":"Simple Renaming Panel is a small, but powerful tool to rename more objects at once. The tool includes basic functionalities of adding suffixes, prefixes, search and replace, add suffixes depending on the object type and much more. Over the time more advanced features like a variable system were added. The tool gives a lot of power to you! You decide which kind of objects will be affected by the renaming task. Rename all or just selected objects, specify the affected object types like image textures, materials, objects, object data, bones, or collections. This tool can be a real everyday helper. Renaming multiple objects is often needed and keeping the naming conventions can be tedious. The tool provides you with a clear feedback of what has been renamed. This tool is kept simple to be user friendly but offers everything you need to stay organized. Join the discussion at Blender Artists . You can thank me by leaving a rating at Gumroad or sponsor a coffee.","title":"Introduction"},{"location":"renaming/#download-and-installation","text":"You can download the Simple Renaming Panel for blender 2.79 and blender 2.80 from the releases section here . Like any other Add-on, you can simply install it by going to File > User Preferences > Add-ons and click at the button Install from File . In the new opened window choose the .zip file of the addon and press Install from file . The Simple Renaming Panel should now appear in your add-ons window and can be activated. Once installed, you can use the auto updater in the user preferences to get the latest version of the addon.","title":"Download and Installation"},{"location":"renaming/#renaming-panel","text":"The renaming panel is the heart of the application. It provides you with a simple and an advanced UI option. It can either be found in the properties panel or by pressing the user defined hotkey. Choose which kind of objects you want to rename: Changes affect selected or all Replace names with a new name Search and replace Search and select Match case for the search and replace Use regular expressions to improve your search Add prefixes Add suffixes Numerate objects Trim string Data: Keeping the object data names clear and organized can be painful in blender, this button simply renames the data according to the objects and adds a specified suffix.","title":"Renaming Panel"},{"location":"renaming/#key-feature","text":"Works for objects, materials, collections, image textures, object data and bones Choose if all or just selected objects should be affected Restrict renaming operation to specific object types (meshes, curves, empties, cameras, metaballs, light probes, volume objects etc.) Search and replace Match case option for search and replace Regex Support Add suffixes and prefixes Numerate Trim names Rename object data after object name Add suffixes or prefixes by specific object types Simple and clean UI Customizable UI position Auto updater","title":"Key Feature:"},{"location":"renaming/#improved-basic-ui","text":"I have improved the UI based on the input from Bookyakuno. This makes it easier to use, while keeping the efficiency from before.","title":"Improved Basic UI"},{"location":"renaming/#advanced-ui-experimental","text":"You can specify the number of leading zeros next to the new name input. Every # represents one 0. You can also disable the automated numeration completely. This is especially useful for the newly introduced variables. Additional Buttons allow you to easily add these variables and show you which ones are available for this renaming process. This UI is still WIP.","title":"Advanced UI (Experimental)"},{"location":"renaming/#search-and-select","text":"The search can now be used to select objects. This uses works with the settings for renaming like only effecting selected and objects of a certain type. This feature works for object renaming as well as bone renaming in pose mode. Warning Known Issues: Time: Ignores the current time zone and uses always Coordinated Universal Time (UTC) The selection order is still ignored Be careful with using the renaming variable for @p for the parent object","title":"Search and Select"},{"location":"renaming/#type-suffix-prefix","text":"The suffix prefix panel is collapsed as it is not used as regularly as the main renaming panel. The panel is used to add prefixes or suffixes based on the object type. It's a quick way to add e.g., \"_geo\" to meshes, \"_empt\" to empties, and \"_cam\" to cameras with one single click. The presets allow you to easily save different naming conventions for different projects. Choose between Suffix and Prefix Geometry: all meshes Material: all materials Empty: all empty objects Curve: all curves Armature: all armatures objects (not bones) Group: all groups Lattice: all lattices Data: all object data Surfaces: all surface objects Cameras : all cameras Lights: all lights Bones: all bones","title":"Type Suffix Prefix"},{"location":"renaming_release_notes/","text":"Release Notes 1.5.3 fixes #101 Numerate is broken! #98 Numerate varialbe and regular numerate behave differently! #103 Category Renaming isn't working properly 1.5.2 Performace improvement for operations affecting a lot of items to rename Improve stability for renaming bones, especially in Edit Mode fixes #85 Numerate on bones not working! #84 Can't rename font and metaballs! #93 'Rename All' does not work in Edit Bone Mode! 1.5.1 Improve stability of renaming bones. Bones can now be renamed in edit mode. fixes #74 Auto Updater is back! #72 Changing the properties panel category from the user preferences works now properly! #80 The renaming variable @c contains the object collections! #78 Specify numerate digits and start in the preferences 1.5.0 [NEW] Auto Updater is back! [NEW] Changing the properties panel category from the user preferences works now properly! [NEW] The renaming variable @c contains the object collections! [NEW] Specify numerate digits and start in the preferences [Fix] Blender console warning for \u201cdoesn\u2019t contain \u2018PT\u2019 with prefix & suffix\u201d [1.4.1] blender 2.8x [Fix]: Renaming only selected Bones in Object mode shows now an info that selected bones can only be renamed in object mode. [Fix]: Improved Error handling [Fix] Duplicate popup window is not shown in the tools panel anymore. 1.4.0 [NEW] Feature: Introduction of the powerful renaming variables [NEW] UI: Toggle between simple and advanced UI [NEW] Presets for rename by type [NEW] Search and select for Object renaming [Fix] Bone renaming in Pose mode 1.3.1 [NEW] UI: User Defined Hotkeys [NEW] UI: Add additional options to the User Preferences of the addon 1.3.0b Blender 2.80 Beta [NEW] UI: The simple renaming panel is now part of the properties panel [NEW] UI: The panel uses for big parts the single column layout [NEW] The codebase was updated to fit the new requironments of blender 2.80 [NEW] The new blender 2.80 specific object types are supported (e.g., grease pencil, lightprops). Groups and Layers have been removed from the addon. [NEW] An option to provide more control over which object type is effected by the renaming action was added. [NEW] It is possible to rename selected bones (Thanks to Cube Creative ) 1.3.0a Blender 2.80 Alpha [DELETED] Renaming of Collections [DELETED] Renaming of Render Layers [DELETED] UI Popup [CHANGED] Tool panel to Properties panel [FIXED] This addon can't be installed from the zip file. 1.2.0] blender 2.79 [NEW] Renaming works now in different modes: object, material, image texture, group, data and bone [NEW] Change the tool shelf category of the add-on in the preferences [NEW] Added a match case checkbox has been added to search and replace [NEW] A simple and well organized information panel lists which objects have been renamed and includes some additional information [NEW] Not only suffixes, but also prefixes can be added by object type [CHANGED] Suffix by type has been renamed to type suffix and prefix panel and is now part of the main panel [NEW]Surfaces, cameras, lights and bones have been added to the type suffix and prefix panel [UPDATED]Auto updater 1.0.3 [FIX] A lot of minor bugs have been fixed 1.0.1 [New] The posibility to give the objects a new name has been added 1.0.0 First official release","title":"Release Notes"},{"location":"renaming_release_notes/#release-notes","text":"","title":"Release Notes"},{"location":"renaming_release_notes/#153","text":"","title":"1.5.3"},{"location":"renaming_release_notes/#152","text":"Performace improvement for operations affecting a lot of items to rename Improve stability for renaming bones, especially in Edit Mode","title":"1.5.2"},{"location":"renaming_release_notes/#151","text":"Improve stability of renaming bones. Bones can now be renamed in edit mode.","title":"1.5.1"},{"location":"renaming_release_notes/#150","text":"[NEW] Auto Updater is back! [NEW] Changing the properties panel category from the user preferences works now properly! [NEW] The renaming variable @c contains the object collections! [NEW] Specify numerate digits and start in the preferences [Fix] Blender console warning for \u201cdoesn\u2019t contain \u2018PT\u2019 with prefix & suffix\u201d","title":"1.5.0"},{"location":"renaming_release_notes/#140","text":"[NEW] Feature: Introduction of the powerful renaming variables [NEW] UI: Toggle between simple and advanced UI [NEW] Presets for rename by type [NEW] Search and select for Object renaming [Fix] Bone renaming in Pose mode","title":"1.4.0"},{"location":"renaming_release_notes/#131","text":"[NEW] UI: User Defined Hotkeys [NEW] UI: Add additional options to the User Preferences of the addon","title":"1.3.1"},{"location":"renaming_release_notes/#130b-blender-280-beta","text":"[NEW] UI: The simple renaming panel is now part of the properties panel [NEW] UI: The panel uses for big parts the single column layout [NEW] The codebase was updated to fit the new requironments of blender 2.80 [NEW] The new blender 2.80 specific object types are supported (e.g., grease pencil, lightprops). Groups and Layers have been removed from the addon. [NEW] An option to provide more control over which object type is effected by the renaming action was added. [NEW] It is possible to rename selected bones (Thanks to Cube Creative )","title":"1.3.0b Blender 2.80 Beta"},{"location":"renaming_release_notes/#130a-blender-280-alpha","text":"[DELETED] Renaming of Collections [DELETED] Renaming of Render Layers [DELETED] UI Popup [CHANGED] Tool panel to Properties panel [FIXED] This addon can't be installed from the zip file.","title":"1.3.0a Blender 2.80 Alpha"},{"location":"renaming_release_notes/#120-blender-279","text":"[NEW] Renaming works now in different modes: object, material, image texture, group, data and bone [NEW] Change the tool shelf category of the add-on in the preferences [NEW] Added a match case checkbox has been added to search and replace [NEW] A simple and well organized information panel lists which objects have been renamed and includes some additional information [NEW] Not only suffixes, but also prefixes can be added by object type [CHANGED] Suffix by type has been renamed to type suffix and prefix panel and is now part of the main panel [NEW]Surfaces, cameras, lights and bones have been added to the type suffix and prefix panel [UPDATED]Auto updater 1.0.3 [FIX] A lot of minor bugs have been fixed","title":"1.2.0] blender 2.79"},{"location":"renaming_release_notes/#101","text":"[New] The posibility to give the objects a new name has been added","title":"1.0.1"},{"location":"renaming_release_notes/#100","text":"First official release","title":"1.0.0"},{"location":"renaming_variables/","text":"Renaming Variables (Experimental) The biggest new feature are the renaming variables. They expand the functionality of the renaming panel drastically while keeping it fast and efficient. Variables are defined by the @ symbol. This is because other typical symbols like $ are already used for Regular Expressions. The variables can be generated by either press the button next to the input field or simply type it in. The current variables are: @f : filename @h: high poly (user defined, default = high) @l: low poly (user defined, default = low) @b: cage (user defined, default = cage) @d: date @u1: (user defined) @u2: (user defined) @u3: (user defined) @i: time @n: number @r: random Following variables are currently only supported in Object mode. @p: object parent (if it has one) @o: object @a: active object @t: type @c: collection (random order) An arbitrary number of renaming variables van be used in any input field and at any position. Variables can be combined and used together with regular strings. E.g., @f_@t_object_@i ([filename] [objecttype]_object [time]_[number]). Furthermore, it is now possible to deactivate the number at the end of newly generated names. Note: Be careful by using the renaming variables in the Search input. It will only compare the strings. If you use the date variable @d it will only find the objects that have the current date and the same format. By deactivating the Numeration and using the custom number variable @n. It is finally also possible to rename many objects at once with a increasing number in the middle of the string. E.g., objeckt_001_high, objeckt_002_high. objeckt_003_high. This can be useful for baking multiple high poly object onto one low poly object within marmoset or substance.","title":"Renaming Variables"},{"location":"renaming_variables/#renaming-variables-experimental","text":"The biggest new feature are the renaming variables. They expand the functionality of the renaming panel drastically while keeping it fast and efficient. Variables are defined by the @ symbol. This is because other typical symbols like $ are already used for Regular Expressions. The variables can be generated by either press the button next to the input field or simply type it in. The current variables are: @f : filename @h: high poly (user defined, default = high) @l: low poly (user defined, default = low) @b: cage (user defined, default = cage) @d: date @u1: (user defined) @u2: (user defined) @u3: (user defined) @i: time @n: number @r: random Following variables are currently only supported in Object mode. @p: object parent (if it has one) @o: object @a: active object @t: type @c: collection (random order) An arbitrary number of renaming variables van be used in any input field and at any position. Variables can be combined and used together with regular strings. E.g., @f_@t_object_@i ([filename] [objecttype]_object [time]_[number]). Furthermore, it is now possible to deactivate the number at the end of newly generated names. Note: Be careful by using the renaming variables in the Search input. It will only compare the strings. If you use the date variable @d it will only find the objects that have the current date and the same format. By deactivating the Numeration and using the custom number variable @n. It is finally also possible to rename many objects at once with a increasing number in the middle of the string. E.g., objeckt_001_high, objeckt_002_high. objeckt_003_high. This can be useful for baking multiple high poly object onto one low poly object within marmoset or substance.","title":"Renaming Variables (Experimental)"}]}